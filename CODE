class FacelessVoidCoding:
    def __init__(self, initial_health):
      
        self.current_health = initial_health
        self.health_history = [initial_health]  

    def take_damage(self, damage):
     
        self.current_health -= damage
        if self.current_health < 0:
            self.current_health = 0  
        self.health_history.append(self.current_health)
        print(f"Took {damage} damage! Current health: {self.current_health}")

    def backtrack(self):
     
        if len(self.health_history) > 1:
            self.health_history.pop()  
            self.current_health = self.health_history[-1]  
            print(f"Backtrack activated! Restored health: {self.current_health}")
        else:
            print("No previous state to backtrack to!")

    def get_health(self):
        """Return the current health."""
        return self.current_health


void = FacelessVoid(initial_health=100) 

void.take_damage(20)  
void.take_damage(30)  
void.backtrack()  
void.backtrack()  
void.backtrack()  

print(f"Final Health: {void.get_health()}")
